<package xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.0" xs:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Atmel</vendor>
  <name>Generated project</name>
  <description>Project generated by Atmel Start</description>
  <url>http://start.atmel.com/</url>
  <releases>
    <release version="1.0.1">Initial version</release>
  </releases>
  <taxonomy>
    <description Cclass="AtmelStart" generator="AtmelStart">Configuration Files generated by Atmel Start</description>
  </taxonomy>
  <generators>
    <generator id="AtmelStart">
      <description>Atmel Start</description>
      <select Dname="ATmega4808" Dvendor="Atmel:3"/>
      <command>http://start.atmel.com/</command>
      <files>
        <file category="generator" name="atmel_start_config.atstart"/>
        <file attr="template" category="other" name="AtmelStart.env_conf" select="Environment configuration"/>
      </files>
    </generator>
  </generators>
  <conditions>
    <condition id="AVR Device Startup">
      <description>Dependency on Device Startup components</description>
      <require Cclass="Device" Cgroup="Startup" Cversion="1.3.0"/>
    </condition>
    <condition id="ARMCC, GCC, IAR">
      <require Dname="ATmega4808"/>
      <accept Tcompiler="ARMCC"/>
      <accept Tcompiler="GCC"/>
      <accept Tcompiler="IAR"/>
    </condition>
  </conditions>
  <components generator="AtmelStart">
    <component Cclass="AtmelStart" Cgroup="Framework" Cversion="1.0.0" condition="AVR Device Startup">
      <description>Atmel Start Framework</description>
      <RTE_Components_h>#define ATMEL_START</RTE_Components_h>
      <files>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/generator/DoxygenLayout.xml"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/generator/doxyfile.doxygen"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/mainpage.dox"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/adc/doc/adc.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/bod/doc/bod.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/clkctrl/doc/clkctrl.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/cpuint/doc/cpuint.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/rtc/doc/rtc.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/slpctrl/doc/slpctrl.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/spi/doc/spi_basic.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/timer/doc/tca.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/timer/doc/tcb.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/twi/doc/twi.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="modules/usart/doc/usart_basic.rst"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="doc/WINCReadme.rst"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/bsp/include/nm_bsp.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/bsp/include/nm_bsp_internal.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/bsp/include/nm_bsp_mega.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/bsp/source/nm_bsp_mega.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/bus_wrapper/include/nm_bus_wrapper.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/bus_wrapper/source/nm_bus_wrapper_mega.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/common/include/nm_common.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/common/include/nm_debug.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/common/source/nm_common.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/ecc_types.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_ate_mode.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_crypto.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_ota.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_periph.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_ssl.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_types.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/include/m2m_wifi.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_ate_mode.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_crypto.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_hif.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_hif.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_ota.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_periph.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_ssl.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/m2m_wifi.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmasic.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmasic.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmbus.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmbus.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmdrv.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmdrv.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmi2c.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmi2c.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmspi.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmspi.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmuart.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/driver/source/nmuart.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/programmer/programmer.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/programmer/programmer_apis.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/socket/include/m2m_socket_host_if.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/socket/include/socket.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/socket/source/socket.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/socket/source/socket_internal.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/spi_flash/include/spi_flash.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="winc/spi_flash/include/spi_flash_map.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="winc/spi_flash/source/spi_flash.c"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="cryptoauthlib/app/README.md"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_bool.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_cfgs.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_cfgs.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_command.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_command.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_compiler.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_device.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_device.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_devtypes.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_execution.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_execution.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_iface.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_iface.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atca_status.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_client.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_client.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_date.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_date.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_def.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_def.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_der.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_der.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_host_hw.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_host_hw.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_host_sw.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_host_sw.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/atcacert/atcacert_pem.h"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/README.md"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_aes.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_checkmac.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_counter.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_derivekey.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_ecdh.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_gendig.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_genkey.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_hmac.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_info.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_kdf.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_lock.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_mac.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_nonce.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_privwrite.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_random.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_read.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_secureboot.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_selftest.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_sha.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_sign.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_updateextra.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_verify.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_basic_write.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_helpers.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/basic/atca_helpers.h"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/README.md"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_ecdsa.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_ecdsa.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_rand.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_rand.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_sha1.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_sha1.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_sha2.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/atca_crypto_sw_sha2.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/hashes/sha1_routines.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/hashes/sha1_routines.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/hashes/sha2_routines.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/crypto/hashes/sha2_routines.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/cryptoauthlib.h"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/90-cryptohid.rules"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/atca_hal.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/atca_hal.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/atca_start_config.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/atca_start_iface.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/hal_atmega4809_i2c.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/hal_atmega4809_i2c.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/hal/hal_atmega4809_timer.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/host/atca_host.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/host/atca_host.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/jwt/atca_jwt.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/jwt/atca_jwt.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/tls/atcatls.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/tls/atcatls.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/tls/atcatls_cfg.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/tls/atcatls_cfg.h"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib/tls/ec_cert-508.csr"/>
        <file category="doc" condition="ARMCC, GCC, IAR" name="doc/CryptoReadme.rst"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="main.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/driver_init.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/driver_init.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/atmel_start_pins.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="driver_isr.c"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/mainpage.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/generator/doxyfile.doxygen"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/generator/DoxygenLayout.xml"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/adc.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/adc_basic.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/i2c.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/i2c_master.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/spi.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/spi_basic.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/system.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/timeout.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/timer.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/usart.dox"/>
        <file category="other" condition="ARMCC, GCC, IAR" name="doxygen/usart_basic.dox"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="examples/include/adc_basic_example.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="examples/include/i2c_master_example.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="examples/include/spi_basic_example.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="examples/include/timeout_example.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="examples/include/usart_basic_example.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="examples/src/adc_basic_example.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="examples/src/i2c_master_example.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="examples/src/spi_basic_example.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="examples/src/timeout_example.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="examples/src/usart_basic_example.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/adc_basic.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/bod.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/ccp.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/clkctrl.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/cpuint.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/i2c_master.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/i2c_simple_master.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/i2c_types.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/port.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/protected_io.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/rstctrl.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/slpctrl.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/spi_basic.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/system.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/timeout.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="include/usart_basic.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/adc_basic.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/bod.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/clkctrl.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/cpuint.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/i2c_master.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/i2c_simple_master.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/i2c_types.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/protected_io.S"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/slpctrl.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/spi_basic.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/timeout.c"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="src/usart_basic.c"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/assembler.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/assembler/gas.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/assembler/iar.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/atomic.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/compiler.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/interrupt_avr8.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/utils.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="utils/utils_assert.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="config/conf_winc.h"/>
        <file category="header" condition="ARMCC, GCC, IAR" name="atmel_start.h"/>
        <file category="source" condition="ARMCC, GCC, IAR" name="atmel_start.c"/>
        <file attr="config" category="header" condition="ARMCC, GCC, IAR" name="config/clock_config.h"/>
        <file category="include" condition="ARMCC, GCC, IAR" name="config"/>
        <file category="include" condition="ARMCC, GCC, IAR" name="examples/include"/>
        <file category="include" condition="ARMCC, GCC, IAR" name="include"/>
        <file category="include" condition="ARMCC, GCC, IAR" name="utils"/>
        <file category="include" condition="ARMCC, GCC, IAR" name="utils/assembler"/>
        <file category="include" condition="ARMCC, GCC, IAR" name="cryptoauthlib/lib"/>
        <file category="include" condition="ARMCC, GCC, IAR" name=""/>
      </files>
    </component>
  </components>
</package>
